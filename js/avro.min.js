var activeta;
var switched;
var oldelement;

function setKeyboardMode() {
    var b = getCookie("phonetic");
    if (null == b) {
        b = "false"
    }
    var d = getCookie("englishkb");
    if (null == d) {
        d = "false"
    }
    var a = getCookie("unicode");
    if (null == a) {
        a = "true"
    }
    var e = getCookie("bijoykb");
    if (null == e) {
        e = "false"
    }
    if (d == "true") {
        makeEnglishEditor(activeta)
    } else {
        if (e == "true" && b == "false") {
            makeBijoyKeybdEditor(activeta)
        } else {
            if (a == "true" && b == "true") {
                makeUniPhoneticEditor(activeta)
            } else {
                if (a == "false" && b == "true") {
                    makeAsciiPhoneticEditor(activeta)
                } else {
                    if (a == "true" && b == "false") {
                        makeUnijoyEditor(activeta)
                    } else {
                        if (a == "false" && b == "false") {
                            makeAsciiUnijoyEditor(activeta)
                        }
                    }
                }
            }
        }
    }
}

function convertToAscii(d, b) {
    var a = $(d).value;
    var e = ConvertToASCII("bijoy", a);
    $(b).value = e
}

function insertEnglish2() {
    activeta = "comment-body2";
    eng = document.getElementById("english2").value;
    insertAtCursor("[Bswjk]" + eng + "[/Bswjk]")
}

function propagate() {
    $(".bng_text, .bng_small_text, .show_bangla_text7777").each(function(a, b) {
        $(b).on("focus", function() {
            activeta = b.id;
            setKeyboardMode();
            oldelement = activeta
        })
    })
}

function getCookie(d) {
    var e = document.cookie.indexOf(d + "=");
    var a = e + d.length + 1;
    if ((!e) && (d != document.cookie.substring(0, d.length))) {
        return null
    }
    if (e == -1) {
        return null
    }
    var b = document.cookie.indexOf(";", a);
    if (b == -1) {
        b = document.cookie.length
    }
    return unescape(document.cookie.substring(a, b))
}

function setCookie(d, f, a, i, e, h) {
    var b = new Date();
    b.setTime(b.getTime());
    if (a) {
        a = a * 1000 * 60 * 60 * 24
    }
    var g = new Date(b.getTime() + (a));
    document.cookie = d + "=" + escape(f) + ((a) ? ";expires=" + g.toGMTString() : "") + ((i) ? ";path=" + i : "") + ((e) ? ";domain=" + e : "") + ((h) ? ";secure" : "")
}

function deleteCookie(a, d, b) {
    if (getCookie(a)) {
        document.cookie = a + "=" + ((d) ? ";path=" + d : "") + ((b) ? ";domain=" + b : "") + ";expires=Thu, 01-Jan-1970 00:00:01 GMT"
    }
}
var AU = function() {
    this.update = function(a, b, d) {
        new Ajax.Request(a, {
            method: "post",
            encoding: "utf-8",
            onSuccess: function(e) {
                $(d).innerHTML = e.responseText
            },
            onFailure: function(e) {
                alert("call failed")
            },
            parameters: "" + b
        })
    };
    this.updateProxy = function(b, d, e) {
        var a = "http://localhost/bba/proxy.php?url=" + encodeURIComponent(b);
        new Ajax.Request(a, {
            method: "post",
            onSuccess: function(f) {
                if (null != e) {
                    $(e).innerHTML = f.responseText
                }
            },
            onFailure: function(f) {
                alert("call failed")
            },
            parameters: "" + d
        })
    }
};
var AU = new AU();
var activeta;
var uniphonetic = new Array();
uniphonetic.k = "\u0995";
uniphonetic.i = "\u09BF";
uniphonetic.I = "\u0987";
uniphonetic.ii = "\u09C0";
uniphonetic.II = "\u0988";
uniphonetic.e = "\u09C7";
uniphonetic.E = "\u098F";
uniphonetic.U = "\u0989";
uniphonetic.u = "\u09C1";
uniphonetic.uu = "\u09C2";
uniphonetic.UU = "\u098A";
uniphonetic.r = "\u09B0";
uniphonetic.WR = "\u098B";
uniphonetic.a = "\u09BE";
uniphonetic.A = "\u0986";
uniphonetic.ao = "\u0985";
uniphonetic.s = "\u09B8";
uniphonetic.t = "\u099f";
uniphonetic.K = "\u0996";
uniphonetic.kh = "\u0996";
uniphonetic.n = "\u09A8";
uniphonetic.N = "\u09A3";
uniphonetic.T = "\u09A4";
uniphonetic.Th = "\u09A5";
uniphonetic.d = "\u09A1";
uniphonetic.dh = "\u09A2";
uniphonetic.b = "\u09AC";
uniphonetic.bh = "\u09AD";
uniphonetic.v = "\u09AD";
uniphonetic.R = "\u09DC";
uniphonetic.Rh = "\u09DD";
uniphonetic.g = "\u0997";
uniphonetic.G = "\u0998";
uniphonetic.gh = "\u0998";
uniphonetic.h = "\u09B9";
uniphonetic.NG = "\u099E";
uniphonetic.j = "\u099C";
uniphonetic.J = "\u099D";
uniphonetic.jh = "\u099D";
uniphonetic.c = "\u099A";
uniphonetic.ch = "\u099A";
uniphonetic.C = "\u099B";
uniphonetic.th = "\u09A0";
uniphonetic.p = "\u09AA";
uniphonetic.f = "\u09AB";
uniphonetic.ph = "\u09AB";
uniphonetic.D = "\u09A6";
uniphonetic.Dh = "\u09A7";
uniphonetic.z = "\u09AF";
uniphonetic.y = "\u09DF";
uniphonetic.Ng = "\u0999";
uniphonetic.ng = "\u0982";
uniphonetic.l = "\u09B2";
uniphonetic.m = "\u09AE";
uniphonetic.sh = "\u09B6";
uniphonetic.S = "\u09B7";
uniphonetic.O = "\u0993";
uniphonetic.ou = "\u099C";
uniphonetic.OU = "\u0994";
uniphonetic.Ou = "\u0994";
uniphonetic.Oi = "\u0990";
uniphonetic.OI = "\u0990";
uniphonetic.tt = "\u09CE";
uniphonetic.H = "\u0983";
uniphonetic["."] = "\u0964";
uniphonetic[".."] = ".";
uniphonetic.HH = "\u09CD\u200c";
uniphonetic.NN = "\u0981";
uniphonetic.Y = "\u09CD\u09AF";
uniphonetic.w = "\u09CD\u09AC";
uniphonetic.W = "\u09C3";
uniphonetic.wr = "\u09C3";
uniphonetic.x = "\u0995\u09CD\u09B8";
uniphonetic.rY = uniphonetic.r + "\u200c\u09CD\u09AF";
uniphonetic.L = uniphonetic.l;
uniphonetic.Z = uniphonetic.z;
uniphonetic.P = uniphonetic.p;
uniphonetic.V = uniphonetic.v;
uniphonetic.B = uniphonetic.b;
uniphonetic.M = uniphonetic.m;
uniphonetic.V = uniphonetic.v;
uniphonetic.X = uniphonetic.x;
uniphonetic.V = uniphonetic.v;
uniphonetic.F = uniphonetic.f;
uniphonetic["0"] = "\u09E6";
uniphonetic["1"] = "\u09E7";
uniphonetic["2"] = "\u09E8";
uniphonetic["3"] = "\u09E9";
uniphonetic["4"] = "\u09EA";
uniphonetic["5"] = "\u09EB";
uniphonetic["6"] = "\u09EC";
uniphonetic["7"] = "\u09ED";
uniphonetic["8"] = "\u09EE";
uniphonetic["9"] = "\u09EF";
var carry = "";
var old_len = 0;
var ctrlPressed = false;
var len_to_process_oi_kar = 0;
var first_letter = false;
isIE = document.all ? 1 : 0;
var switched = false;

function checkKeyDown(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == "17") {
        ctrlPressed = true
    }
}

function checkKeyUp(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == "17") {
        ctrlPressed = false
    }
}

function parseuniphonetic(f) {
    var b = document.getElementById(activeta);
    var d = (window.event) ? event.keyCode : f.which;
    if (d == "113") {
        if (ctrlPressed) {
            switched = !switched;
            return true
        }
    }
    if (switched) {
        return true
    }
    if (ctrlPressed) {
        d = 0
    }
    var a = String.fromCharCode(d);
    if (d == 8 || d == 32) {
        carry = " ";
        old_len = 1;
        return
    }
    lastcarry = carry;
    carry += "" + a;
    bangla = parseuniphoneticCarry(carry);
    tempBangla = parseuniphoneticCarry(a);
    if (tempBangla == ".." || bangla == "..") {
        return false
    }
    if (a == "+") {
        if (carry == "++") {
            insertJointAtCursor("+", old_len);
            old_len = 1;
            return false
        }
        insertAtCursor("\u09CD");
        old_len = 1;
        carry = "+";
        return false
    } else {
        if (old_len == 0) {
            insertJointAtCursor(bangla, 1);
            old_len = 1;
            return false
        } else {
            if (carry == "ao") {
                insertJointAtCursor(parseuniphoneticCarry("ao"), old_len);
                old_len = 1;
                return false
            } else {
                if (carry == "ii") {
                    insertJointAtCursor(uniphonetic.ii, 1);
                    old_len = 1;
                    return false
                } else {
                    if (carry == "oi") {
                        insertJointAtCursor("\u09C8", 1);
                        return false
                    } else {
                        if (a == "o") {
                            old_len = 1;
                            insertAtCursor("\u09CB");
                            carry = "o";
                            return false
                        } else {
                            if (carry == "ou") {
                                insertJointAtCursor("\u09CC", old_len);
                                old_len = 1;
                                return false
                            } else {
                                if ((bangla == "" && tempBangla != "")) {
                                    bangla = tempBangla;
                                    if (bangla == "") {
                                        carry = "";
                                        return
                                    } else {
                                        carry = a;
                                        insertAtCursor(bangla);
                                        old_len = bangla.length;
                                        return false
                                    }
                                } else {
                                    if (bangla != "") {
                                        insertJointAtCursor(bangla, old_len);
                                        old_len = bangla.length;
                                        return false
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function parseuniphoneticCarry(a) {
    if (!uniphonetic[a]) {
        return ""
    } else {
        return (uniphonetic[a])
    }
}

function insertAtCursor(d) {
    console.log(activeta);
    var e = document.getElementById(activeta);
    if (document.selection) {
        e.focus();
        sel = document.selection.createRange();
        sel.text = d;
        sel.collapse(true);
        sel.select()
    } else {
        if (e.selectionStart || e.selectionStart == 0) {
            var b = e.selectionStart;
            var a = e.selectionEnd;
            var f = e.scrollTop;
            b = (b == -1 ? e.value.length : b);
            e.value = e.value.substring(0, b) + d + e.value.substring(a, e.value.length);
            e.focus();
            e.selectionStart = b + d.length;
            e.selectionEnd = b + d.length;
            e.scrollTop = f
        } else {
            var f = e.scrollTop;
            e.value += d;
            e.focus();
            e.scrollTop = f
        }
    }
}

function insertJointAtCursor(e, a) {
    var f = document.getElementById(activeta);
    if (document.selection) {
        f.focus();
        sel = document.selection.createRange();
        if (f.value.length >= a) {
            sel.moveStart("character", -1 * (a))
        }
        sel.text = e;
        sel.collapse(true);
        sel.select()
    } else {
        if (f.selectionStart || f.selectionStart == 0) {
            f.focus();
            var d = f.selectionStart - a;
            var b = f.selectionEnd;
            var g = f.scrollTop;
            d = (d == -1 ? f.value.length : d);
            f.value = f.value.substring(0, d) + e + f.value.substring(b, f.value.length);
            f.focus();
            f.selectionStart = d + e.length;
            f.selectionEnd = d + e.length;
            f.scrollTop = g
        } else {
            var g = f.scrollTop;
            f.value += e;
            f.focus();
            f.scrollTop = g
        }
    }
}

function makeUniPhoneticEditor(a) {
    activeTextAreaInstance = document.getElementById(a);
    activeTextAreaInstance.onkeypress = parseuniphonetic;
    activeTextAreaInstance.onkeydown = checkKeyDown;
    activeTextAreaInstance.onkeyup = checkKeyUp;
    activeTextAreaInstance.onfocus = function() {
        activeta = a
    }
}
var activeta;
var phonetic = new Array();
phonetic.k = "K";
phonetic.oi = "ï¿½";
phonetic.OI = "H";
phonetic.i = "w";
phonetic.I = "B";
phonetic.ii = "x";
phonetic.II = "C";
phonetic.e = "ï¿½";
phonetic.E = "G";
phonetic.U = "D";
phonetic.u = "y";
phonetic.uu = "~";
phonetic.UU = "E";
phonetic.r = "i";
phonetic.WR = "F";
phonetic.a = "v";
phonetic.A = "Av";
phonetic.ao = "A";
phonetic.s = "m";
phonetic.t = "U";
phonetic.K = "L";
phonetic["K+r"] = "Lï¿½";
phonetic.kh = "L";
phonetic["kh+r"] = "Lï¿½";
phonetic.n = "b";
phonetic.N = "Y";
phonetic.T = "Z";
phonetic.Th = "_";
phonetic["Th+r"] = "_ï¿½";
phonetic.D = "`";
phonetic.Dh = "a";
phonetic["Dh+r"] = "aï¿½";
phonetic.b = "e";
phonetic.bh = "f";
phonetic.v = "f";
phonetic.R = "o";
phonetic.Rh = "p";
phonetic.g = "M";
phonetic.G = "N";
phonetic["G+r"] = "Nï¿½";
phonetic.gh = "N";
phonetic["gh+r"] = "Nï¿½";
phonetic.h = "n";
phonetic.NG = "T";
phonetic.j = "R";
phonetic.J = "S";
phonetic.jh = "S";
phonetic.c = "P";
phonetic.ch = "P";
phonetic.C = "Q";
phonetic.th = "V";
phonetic.p = "c";
phonetic.f = "d";
phonetic.ph = "d";
phonetic.d = "W";
phonetic.dh = "X";
phonetic["dh+r"] = "Xï¿½";
phonetic.z = "h";
phonetic.y = "q";
phonetic.Ng = "O";
phonetic.ng = "s";
phonetic.l = "j";
phonetic.m = "g";
phonetic.sh = "k";
phonetic.S = "l";
phonetic.O = "I";
phonetic.ou = "ï¿½";
phonetic.OU = "J";
phonetic.tt = "r";
phonetic.H = "t";
phonetic["."] = "|";
phonetic[".."] = ".";
phonetic.HH = "&";
phonetic.NN = "u";
phonetic.Y = "ï¿½";
phonetic.w = " ";
phonetic.W = " ";
phonetic.wr = "ï¿½";
phonetic["k+s"] = "ï¿½";
phonetic.x = "ï¿½";
phonetic["k+T"] = "ï¿½";
phonetic["k+t"] = "ï¿½";
phonetic["k+w"] = "Kï¿½";
phonetic["k+b"] = "Kï¿½";
phonetic["k+l"] = "Kï¿½";
phonetic["k+S"] = "ï¿½";
phonetic["k+r"] = "ï¿½";
phonetic["g+g"] = "ï¿½";
phonetic["g+D"] = "ï¿½";
phonetic["g+l"] = "Mï¿½";
phonetic["g+n"] = "Mï¿½";
phonetic["g+m"] = "Mï¿½";
phonetic["g+Dh"] = "ï¿½";
phonetic["g+r"] = "Mï¿½";
phonetic["Ng+k"] = "ï¿½";
phonetic["Ng+K"] = "ï¿½L";
phonetic["Ng+kh"] = "ï¿½L";
phonetic["Ng+g"] = "ï¿½";
phonetic["Ng+G"] = "ï¿½N";
phonetic["Ng+gh"] = "ï¿½N";
phonetic["Ng+k+S"] = "ï¿½ï¿½";
phonetic["c+c"] = "ï¿½P";
phonetic["ch+c"] = "ï¿½P";
phonetic["c+ch"] = "ï¿½P";
phonetic["c+C"] = "ï¿½Q";
phonetic["ch+C"] = "ï¿½Q";
phonetic["c+NG"] = "ï¿½T";
phonetic["ch+NG"] = "ï¿½T";
phonetic["c+C+w"] = "ï¿½Qï¿½";
phonetic["ch+C+w"] = "ï¿½Qï¿½";
phonetic["c+C+b"] = "ï¿½Qï¿½";
phonetic["ch+C+b"] = "ï¿½Qï¿½";
phonetic["j+j"] = "ï¿½";
phonetic["j+N"] = "..";
phonetic["j+w"] = "Rï¿½";
phonetic["j+b"] = "Rï¿½";
phonetic["j+j+b"] = "ï¿½ï¿½";
phonetic["j+j+w"] = "ï¿½ï¿½";
phonetic["j+r"] = "Rï¿½";
phonetic["t+w"] = "Uï¿½";
phonetic["t+b"] = "Uï¿½";
phonetic["t+m"] = "Uï¿½";
phonetic["t+r"] = "Uï¿½";
phonetic["d+r"] = "Wï¿½";
phonetic["n+n"] = "bï¿½";
phonetic["n+t"] = "ï¿½U";
phonetic["n+b"] = "ï¿½^";
phonetic["n+w"] = "ï¿½^";
phonetic["n+T"] = "ï¿½ï¿½";
phonetic["n+Th"] = "ï¿½ï¿½";
phonetic["n+D"] = "ï¿½`";
phonetic["n+m"] = "bï¿½";
phonetic["n+T+r"] = "ï¿½ï¿½";
phonetic["n+Dh+r"] = "Ü«";
phonetic["T+n"] = "Zï¿½";
phonetic["T+w"] = "Zï¿½";
phonetic["T+b"] = "Zï¿½";
phonetic["T+m"] = "Zï¿½";
phonetic["T+T+w"] = "Ë¡";
phonetic["T+T+b"] = "Ë¡";
phonetic["Th+w"] = "_ï¿½";
phonetic["Th+b"] = "_ï¿½";
phonetic["D+g"] = "ï¿½M";
phonetic["D+G"] = "ï¿½N";
phonetic["D+gh"] = "ï¿½N";
phonetic["D+v"] = "ï¿½ï¿½";
phonetic["D+bh"] = "ï¿½ï¿½";
phonetic["D+v+r"] = "ï¿½ï¿½";
phonetic["D+bh+r"] = "ï¿½ï¿½";
phonetic["D+w"] = "ï¿½ï¿½";
phonetic["D+b"] = "ï¿½ï¿½";
phonetic["Dh+w"] = "aï¿½";
phonetic["Dh+b"] = "aï¿½";
phonetic["Dh+m"] = "aï¿½";
phonetic["N+n"] = "Yï¿½";
phonetic["N+b"] = "Y^";
phonetic["N+w"] = "Y^";
phonetic["p+l"] = "cï¿½";
phonetic["p+n"] = "cï¿½";
phonetic["f+l"] = "dï¿½";
phonetic["ph+l"] = "dï¿½";
phonetic["ph+r"] = "dï¿½";
phonetic["f+r"] = "dï¿½";
phonetic["b+l"] = "eï¿½";
phonetic["b+w"] = "eï¿½";
phonetic["b+b"] = "eï¿½";
phonetic["b+r"] = "eï¿½";
phonetic["bh+l"] = "fï¿½";
phonetic["v+l"] = "fï¿½";
phonetic["m+n"] = "gï¿½";
phonetic["m+l"] = "ï¿½ï¿½";
phonetic["m+b"] = "ï¿½^";
phonetic["m+w"] = "ï¿½^";
phonetic["m+v"] = "ï¿½ï¿½";
phonetic["m+bh"] = "ï¿½ï¿½";
phonetic["m+v+r"] = "ï¿½ï¿½";
phonetic["m+bh+r"] = "ï¿½ï¿½";
phonetic["m+m"] = "ï¿½ï¿½";
phonetic["m+r"] = "gï¿½";
phonetic["l+w"] = "jï¿½";
phonetic["l+b"] = "jï¿½";
phonetic["l+m"] = "jï¿½";
phonetic["l+l"] = "jï¿½";
phonetic["sh+n"] = "kï¿½";
phonetic["sh+l"] = "kï¿½";
phonetic["sh+b"] = "kï¿½";
phonetic["sh+w"] = "kï¿½";
phonetic["sh+m"] = "kï¿½";
phonetic["sh+r"] = "kï¿½";
phonetic["S+k"] = "ï¿½ï¿½";
phonetic["S+k+r"] = "ï¿½ï¿½";
phonetic["S+m"] = "ï¿½ï¿½";
phonetic["s+k"] = "ï¿½ï¿½";
phonetic["s+T"] = "ï¿½ï¿½";
phonetic["s+r"] = "mï¿½";
phonetic["s+Th"] = "ï¿½ï¿½";
phonetic["s+n"] = "mï¿½";
phonetic["s+b"] = "ï¿½^";
phonetic["s+w"] = "ï¿½^";
phonetic["s+m"] = "ï¿½ï¿½";
phonetic["s+k+r"] = "ï¿½ï¿½";
phonetic["s+l"] = "ï¿½ï¿½";
phonetic["h+w"] = "..";
isIE = document.all ? 1 : 0;
var carry = "";
var old_len = 0;
var ctrlPressed = false;
var len_to_process_oi_kar = 0;
var first_letter = false;

function checkKeyDown(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == 17) {
        ctrlPressed = true
    }
}

function checkKeyUp(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == 17) {
        ctrlPressed = false
    }
}

function parsePhonetic(f) {
    var b = document.getElementById(activeta);
    var d = (window.event) ? event.keyCode : f.which;
    if (ctrlPressed) {
        d = 0
    }
    var a = String.fromCharCode(d);
    if (d == 8 || d == 32) {
        carry = " ";
        old_len = 1;
        return
    }
    lastcarry = carry;
    carry += "" + a;
    bangla = parsePhoneticCarry(carry);
    tempBangla = parsePhoneticCarry(a);
    if (tempBangla == ".." || bangla == "..") {
        return false
    }
    if (a == "+") {
        if (carry == "++") {
            insertAtCursor("+");
            old_len = 1
        }
        return false
    } else {
        if (old_len == 0) {
            insertJointAtCursor(bangla, 1);
            old_len = 1;
            return false
        } else {
            if (carry == "ao") {
                insertJointAtCursor(parsePhoneticCarry("ao"), old_len);
                old_len = 1;
                return false
            } else {
                if (carry == "ii" || bangla == parsePhoneticCarry("ii")) {
                    insertKar(bangla, old_len);
                    old_len = 1;
                    return false
                } else {
                    if (carry == "oi") {
                        insertKar("ï¿½", len_to_process_oi_kar);
                        return false
                    } else {
                        if (a == "e" || a == "i") {
                            if (lastcarry == "Y") {
                                old_len += 1
                            }
                            insertKar(tempBangla, old_len);
                            old_len = 1;
                            carry = a;
                            return false
                        } else {
                            if (a == "o") {
                                insertKar(parsePhoneticCarry("e"), old_len);
                                len_to_process_oi_kar = old_len + 2;
                                old_len = 1;
                                insertAtCursor(parsePhoneticCarry("a"), old_len);
                                carry = "o";
                                return false
                            } else {
                                if (carry == "ou") {
                                    insertJointAtCursor("ï¿½", old_len);
                                    old_len = 1;
                                    return false
                                } else {
                                    if (carry.substring(0, 2) == "r+") {
                                        restChar = carry.substring(2);
                                        tempbangla = parsePhoneticCarry(restChar);
                                        if (tempbangla.length != 0) {
                                            ref = "ï¿½";
                                            insertJointAtCursor(tempbangla, old_len);
                                            insertAtCursor(ref);
                                            old_len = 2 + bangla.length
                                        } else {
                                            insertAtCursor(parsePhoneticCarry(a));
                                            carry = a;
                                            old_len = 1;
                                            return false
                                        }
                                        return false
                                    } else {
                                        if ((bangla == "" && tempBangla != "")) {
                                            bangla = tempBangla;
                                            if (bangla == "") {
                                                carry = "";
                                                return
                                            } else {
                                                carry = a;
                                                insertAtCursor(bangla);
                                                old_len = bangla.length;
                                                return false
                                            }
                                        } else {
                                            if (bangla != "") {
                                                insertJointAtCursor(bangla, old_len);
                                                old_len = bangla.length;
                                                return false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function parsePhoneticCarry(a) {
    if (!phonetic[a]) {
        return ""
    } else {
        return (phonetic[a])
    }
}

function insertAtCursor(d) {
    var e = document.getElementById(activeta);
    if (document.selection) {
        e.focus();
        sel = document.selection.createRange();
        sel.text = d;
        sel.collapse(true);
        sel.select()
    } else {
        if (e.selectionStart || e.selectionStart == 0) {
            var b = e.selectionStart;
            var a = e.selectionEnd;
            var f = e.scrollTop;
            b = (b == -1 ? e.value.length : b);
            e.value = e.value.substring(0, b) + d + e.value.substring(a, e.value.length);
            e.focus();
            e.selectionStart = b + d.length;
            e.selectionEnd = b + d.length;
            e.scrollTop = f
        } else {
            var f = e.scrollTop;
            e.value += d;
            e.focus();
            e.scrollTop = f
        }
    }
}

function insertJointAtCursor(e, a) {
    var f = document.getElementById(activeta);
    if (document.selection) {
        f.focus();
        sel = document.selection.createRange();
        if (f.value.length >= a) {
            sel.moveStart("character", -1 * (a))
        }
        sel.text = e;
        sel.collapse(true);
        sel.select()
    } else {
        if (f.selectionStart || f.selectionStart == 0) {
            f.focus();
            var d = f.selectionStart - a;
            var b = f.selectionEnd;
            var g = f.scrollTop;
            d = (d == -1 ? f.value.length : d);
            f.value = f.value.substring(0, d) + e + f.value.substring(b, f.value.length);
            f.focus();
            f.selectionStart = d + e.length;
            f.selectionEnd = d + e.length;
            f.scrollTop = g
        } else {
            var g = f.scrollTop;
            f.value += e;
            f.focus();
            f.scrollTop = g
        }
    }
}

function insertKar(e, a) {
    var f = document.getElementById(activeta);
    if (document.selection) {
        f.focus();
        sel = document.selection.createRange();
        if (e == parsePhoneticCarry("oi")) {
            sel.moveStart("character", -1 * (a));
            sel.moveEnd("character", -1 * (a - 1));
            sel.text = e;
            sel.moveStart("character", a - 1);
            sel.moveEnd("character", a - 1);
            insertJointAtCursor("", 1)
        } else {
            if (e != parsePhoneticCarry("ii")) {
                sel.moveStart("character", -1 * a);
                sel.moveEnd("character", -1 * a);
                sel.text = e;
                sel.moveStart("character", a);
                sel.moveEnd("character", a)
            } else {
                sel.text = "x";
                sel.moveStart("character", -1 * (a + 2));
                sel.moveEnd("character", -1 * (a + 1));
                sel.text = "";
                sel.moveStart("character", a + 1);
                sel.moveEnd("character", a + 1)
            }
        }
        sel.collapse(true);
        sel.select()
    } else {
        if (f.selectionStart || f.selectionStart == 0) {
            var d = f.selectionStart - a;
            var b = f.selectionEnd - a;
            var g = f.scrollTop;
            d = (d == -1 ? f.value.length : d);
            if (e == parsePhoneticCarry("oi")) {
                insertJointAtCursor("", 1);
                f.value = f.value.substring(0, d) + e + f.value.substring(b + 1, f.value.length);
                a = a - 2
            } else {
                if (e != parsePhoneticCarry("ii")) {
                    f.value = f.value.substring(0, d) + e + f.value.substring(b, f.value.length)
                } else {
                    insertAtCursor("x");
                    f.value = f.value.substring(0, d - 1) + f.value.substring(b, f.value.length);
                    a = a - 1
                }
            }
            f.focus();
            f.selectionStart = d + e.length + a;
            f.selectionEnd = d + e.length + a;
            f.scrollTop = g
        } else {
            var g = f.scrollTop;
            f.value += e;
            f.focus();
            f.scrollTop = g
        }
    }
}
var ban = new Array();
ban["38"] = "u";
ban["106"] = "K";
ban["106.106"] = "ï¿½";
ban["67"] = "ï¿½";
ban[".67"] = "H";
ban["100"] = "w";
ban[".100"] = "B";
ban["122"] = "ï¿½";
ban["68"] = "x";
ban[".68"] = "C";
ban["99"] = "ï¿½";
ban[".99"] = "G";
ban[".115"] = "D";
ban["115"] = "y";
ban["83"] = "~";
ban[".83"] = "E";
ban["97"] = "ï¿½";
ban["118"] = "i";
ban[".97"] = "F";
ban["102"] = "v";
ban[".102"] = "Av";
ban["70"] = "A";
ban["110"] = "m";
ban["116"] = "U";
ban["74"] = "L";
ban["98"] = "b";
ban["66"] = "Y";
ban["107"] = "Z";
ban["75"] = "_";
ban["108"] = "`";
ban["76"] = "a";
ban["104"] = "e";
ban["72"] = "f";
ban["65"] = "ï¿½";
ban["112"] = "o";
ban["80"] = "p";
ban["111"] = "M";
ban["79"] = "N";
ban["105"] = "n";
ban["73"] = "T";
ban["117"] = "R";
ban["85"] = "S";
ban["121"] = "P";
ban["89"] = "Q";
ban["84"] = "V";
ban["114"] = "c";
ban["82"] = "d";
ban["101"] = "W";
ban["69"] = "X";
ban["119"] = "h";
ban["87"] = "q";
ban["113"] = "O";
ban["81"] = "s";
ban["86"] = "j";
ban["109"] = "g";
ban["77"] = "k";
ban["78"] = "l";
ban["120"] = "I";
ban["88"] = "ï¿½";
ban[".88"] = "J";
ban["90"] = "ï¿½";
ban["92"] = "r";
ban["124"] = "t";
ban["106.110"] = "ï¿½";
ban["106.107"] = "ï¿½";
ban["106.116"] = "ï¿½";
ban["106.104"] = "Kï¿½";
ban["106.86"] = "Kï¿½";
ban["106.78"] = "ï¿½";
ban["106.118"] = "ï¿½";
ban["111.111"] = "ï¿½";
ban["111.108"] = "ï¿½";
ban["111.86"] = "Mï¿½";
ban["111.98"] = "Mï¿½";
ban["111.109"] = "Mï¿½";
ban["111.76"] = "ï¿½";
ban["113.106"] = "ï¿½";
ban["113.74"] = "ï¿½L";
ban["113.111"] = "ï¿½";
ban["113.79"] = "ï¿½N";
ban["113.106.78"] = "ï¿½ï¿½";
ban["121.121"] = "ï¿½P";
ban["121.89"] = "ï¿½Q";
ban["121.73"] = "ï¿½T";
ban["121.89.104"] = "ï¿½Qï¿½";
ban["117.117"] = "ï¿½";
ban["117.104"] = "Rï¿½";
ban["117.117.104"] = "ï¿½ï¿½";
ban["116.104"] = "Uï¿½";
ban["116.109"] = "Uï¿½";
ban["98.98"] = "bï¿½";
ban["98.116"] = "ï¿½U";
ban["98.104"] = "ï¿½^";
ban["98.107"] = "ï¿½ï¿½";
ban["98.75"] = "ï¿½ï¿½";
ban["98.108"] = "ï¿½`";
ban["98.109"] = "bï¿½";
ban["98.107.118"] = "ï¿½ï¿½";
ban["98.76.118"] = "Ü«";
ban["107.98"] = "Zï¿½";
ban["107.104"] = "Zï¿½";
ban["107.109"] = "Zï¿½";
ban["107.107.104"] = "Ë¡";
ban["75.104"] = "_ï¿½";
ban["108.111"] = "ï¿½M";
ban["108.79"] = "ï¿½N";
ban["108.72"] = "ï¿½ï¿½";
ban["108.72.118"] = "ï¿½ï¿½";
ban["108.104"] = "ï¿½ï¿½";
ban["76.104"] = "aï¿½";
ban["76.109"] = "aï¿½";
ban["66.98"] = "Yï¿½";
ban["66.104"] = "Y^";
ban["114.86"] = "cï¿½";
ban["114.98"] = "cï¿½";
ban["82.86"] = "dï¿½";
ban["82.118"] = "dï¿½";
ban["104.86"] = "eï¿½";
ban["104.104"] = "eï¿½";
ban["72.86"] = "fï¿½";
ban["109.98"] = "gï¿½";
ban["109.86"] = "ï¿½ï¿½";
ban["109.104"] = "ï¿½^";
ban["109.72"] = "ï¿½ï¿½";
ban["109.72.118"] = "ï¿½ï¿½";
ban["109.109"] = "ï¿½ï¿½";
ban["86.104"] = "jï¿½";
ban["86.109"] = "jï¿½";
ban["86.86"] = "jï¿½";
ban["77.98"] = "kï¿½";
ban["77.86"] = "kï¿½";
ban["77.104"] = "kï¿½";
ban["77.109"] = "kï¿½";
ban["77.118"] = "kï¿½";
ban["78.106"] = "ï¿½ï¿½";
ban["78.106"] = "ï¿½ï¿½";
ban["78.106.118"] = "ï¿½ï¿½";
ban["78.109"] = "ï¿½ï¿½";
ban["110.106"] = "ï¿½ï¿½";
ban["110.107"] = "ï¿½ï¿½";
ban["110.75"] = "ï¿½ï¿½";
ban["110.107.118"] = "ï¿½ï¿½";
ban["110.98"] = "mï¿½";
ban["110.104"] = "ï¿½^";
ban["110.109"] = "ï¿½ï¿½";
ban["110.106.118"] = "ï¿½ï¿½";
ban["110.86"] = "ï¿½ï¿½";
isIE = document.all ? 1 : 0;
var carry = "";
var len = 1;
var ctrlPressed = false;

function checkKeyDown(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == 17) {
        ctrlPressed = true
    }
}

function checkKeyUp(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == 17) {
        ctrlPressed = false
    }
}

function parseCode(d) {
    var b = document.getElementById(activeta);
    var a = 1;
    var f = (window.event) ? event.keyCode : d.which;
    if (ctrlPressed) {
        f = 0
    }
    if (a == "1") {
        if (isIE) {
            window.event.keyCode = ""
        }
    }
    c = parseCarry(f);
    if (f != 103 && c == "" && f != 71) {
        if (a == 1) {
            if (isIE) {
                window.event.keyCode = f
            }
        }
        return
    }
    if (f == 103) {
        carry += ".";
        return false
    } else {
        if (f == 32) {
            insertAtCursor(" ");
            carry = "";
            len = 0;
            return
        } else {
            if (f == 46) {
                insertAtCursor(".");
                carry = "32";
                len = 1;
                return
            } else {
                if (f == 71) {
                    insertAtCursor("|");
                    carry = "";
                    len = 0;
                    return false
                }
            }
        }
        carry += f;
        l = carry.length;
        if (l > 3) {
            if (carry.substr(l - 3, 3) == ".99" || carry.substr(l - 3, 3) == ".83" || carry.substr(l - 3, 3) == ".67" || carry.substr(l - 3, 3) == ".68" || carry.substr(l - 3, 3) == ".88" || carry.substr(l - 3, 3) == ".97") {
                carry = carry.substr(l - 3, 3);
                insertAtCursor(parseCarry(carry));
                return false
            } else {
                if (carry.substr(l - 4, 4) == ".115" || carry.substr(l - 4, 4) == ".102" || carry.substr(l - 4, 4) == ".100") {
                    carry = carry.substr(l - 4, 4);
                    insertAtCursor(parseCarry(carry));
                    return false
                }
            }
        }
        charValue = parseCarry(carry);
        if (charValue == "") {
            charValue = parseCarry(f);
            carry = f;
            len = charValue.length;
            insertAtCursor(charValue);
            return false
        } else {
            tx = b.value;
            textlen = tx.length;
            tx = tx.substr(0, textlen - len);
            insertJointAtCursor(charValue, len);
            len = charValue.length;
            return false
        }
    }
}

function parseCodeKB(d) {
    var b = document.getElementById(activeta);
    var a = 1;
    var f = d;
    if (a == "1") {}
    c = parseCarry(f);
    if (f != 103 && c == "" && f != 71) {
        if (a == 1) {}
    }
    if (f == 103) {
        carry += ".";
        return false
    } else {
        if (f == 32) {
            insertAtCursor(" ");
            carry = "32";
            len = 0;
            return
        } else {
            if (f == 46) {
                insertAtCursor(".");
                carry = "32";
                len = 1;
                return
            } else {
                if (f == 71) {
                    insertAtCursor("|");
                    carry = "";
                    len = 0;
                    return false
                }
            }
        }
        carry += f;
        l = carry.length;
        if (l > 3) {
            if (carry.substr(l - 3, 3) == ".99" || carry.substr(l - 3, 3) == ".83" || carry.substr(l - 3, 3) == ".67" || carry.substr(l - 3, 3) == ".68" || carry.substr(l - 3, 3) == ".88" || carry.substr(l - 3, 3) == ".97") {
                carry = carry.substr(l - 3, 3);
                len = -1;
                insertAtCursor(parseCarry(carry));
                return false
            } else {
                if (carry.substr(l - 4, 4) == ".115" || carry.substr(l - 4, 4) == ".102" || carry.substr(l - 4, 4) == ".100") {
                    carry = carry.substr(l - 4, 4);
                    len = -1;
                    insertAtCursor(parseCarry(carry));
                    return false
                }
            }
        }
        charValue = parseCarry(carry);
        if (charValue == "") {
            charValue = parseCarry(f);
            carry = f;
            len = charValue.length;
            insertAtCursor(charValue);
            return false
        } else {
            tx = b.value;
            textlen = tx.length;
            tx = b.value;
            oldlen = len;
            len = charValue.length;
            insertJointAtCursor(charValue, oldlen);
            return false
        }
    }
}

function parseCarry(a) {
    if (!ban[a]) {
        return ""
    } else {
        return (ban[a])
    }
}

function parseKhio() {
    parseCodeKB("106");
    carry = "106.";
    parseCodeKB(78)
}

function makeAsciiPhoneticEditor(a) {
    activeTextAreaInstance = document.getElementById(a);
    activeTextAreaInstance.onkeypress = parsePhonetic;
    activeTextAreaInstance.onkeydown = checkKeyDown;
    activeTextAreaInstance.onkeyup = checkKeyUp;
    activeTextAreaInstance.onfocus = function() {
        activeta = a
    }
}

function makeAsciiUnijoyEditor(a) {
    activeTextAreaInstance = document.getElementById(a);
    activeTextAreaInstance.onkeypress = parseCode;
    activeTextAreaInstance.onkeydown = checkKeyDown;
    activeTextAreaInstance.onkeyup = checkKeyUp;
    activeTextAreaInstance.onfocus = function() {
        activeta = a
    }
}
var activeta;
var unijoy = new Array();
unijoy.j = "\u0995";
unijoy.d = "\u09BF";
unijoy.gd = "\u0987";
unijoy.D = "\u09C0";
unijoy.gD = "\u0988";
unijoy.c = "\u09C7";
unijoy.gc = "\u098F";
unijoy.gs = "\u0989";
unijoy.s = "\u09C1";
unijoy.S = "\u09C2";
unijoy.gS = "\u098A";
unijoy.v = "\u09B0";
unijoy.a = "\u098B";
unijoy.f = "\u09BE";
unijoy.gf = "\u0986";
unijoy.F = "\u0985";
unijoy.n = "\u09B8";
unijoy.t = "\u099f";
unijoy.J = "\u0996";
unijoy.b = "\u09A8";
unijoy.B = "\u09A3";
unijoy.k = "\u09A4";
unijoy.K = "\u09A5";
unijoy.e = "\u09A1";
unijoy.E = "\u09A2";
unijoy.h = "\u09AC";
unijoy.H = "\u09AD";
unijoy.p = "\u09DC";
unijoy.P = "\u09DD";
unijoy.o = "\u0997";
unijoy.O = "\u0998";
unijoy.i = "\u09B9";
unijoy.I = "\u099E";
unijoy.u = "\u099C";
unijoy.U = "\u099D";
unijoy.y = "\u099A";
unijoy.Y = "\u099B";
unijoy.T = "\u09A0";
unijoy.r = "\u09AA";
unijoy.R = "\u09AB";
unijoy.l = "\u09A6";
unijoy.L = "\u09A7";
unijoy.w = "\u09AF";
unijoy.W = "\u09DF";
unijoy.q = "\u0999";
unijoy.Q = "\u0982";
unijoy.V = "\u09B2";
unijoy.m = "\u09AE";
unijoy.M = "\u09B6";
unijoy.N = "\u09B7";
unijoy.gx = "\u0993";
unijoy.X = "\u09CC";
unijoy.gX = "\u0994";
unijoy.gC = "\u0990";
unijoy["\\"] = "\u09CE";
unijoy["|"] = "\u0983";
unijoy.G = "\u0964";
unijoy.g = " ";
unijoy["&"] = "\u0981";
unijoy.Z = "\u09CD\u09AF";
unijoy.gh = "\u09CD\u09AC";
unijoy.ga = "\u098B";
unijoy.a = "\u09C3";
unijoy.rZ = unijoy.r + "\u200c\u09CD\u09AF";
unijoy.z = "\u09CD" + unijoy.v;
unijoy.x = "\u09CB";
unijoy.C = "\u09C8";
unijoy["0"] = "\u09E6";
unijoy["1"] = "\u09E7";
unijoy["2"] = "\u09E8";
unijoy["3"] = "\u09E9";
unijoy["4"] = "\u09EA";
unijoy["5"] = "\u09EB";
unijoy["6"] = "\u09EC";
unijoy["7"] = "\u09ED";
unijoy["8"] = "\u09EE";
unijoy["9"] = "\u09EF";
var carry = "";
var old_len = 0;
var ctrlPressed = false;
var altPressed = false;
var first_letter = false;
var lastInserted;
isIE = document.all ? 1 : 0;
var switched = false;

function checkKeyDown(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == "17") {
        ctrlPressed = true
    } else {
        if (b == "18") {
            altPressed = true
        }
    }
}

function checkKeyUp(a) {
    var b = (window.event) ? event.keyCode : a.which;
    if (b == "17") {
        ctrlPressed = false
    } else {
        if (b == "18") {
            altPressed = false
        }
    }
}

function parseunijoy(f) {
    var b = document.getElementById(activeta);
    var d = (window.event) ? event.keyCode : f.which;
    if (d == "113") {
        if (ctrlPressed) {
            switched = !switched;
            return true
        }
    }
    if (switched) {
        return true
    }
    if (ctrlPressed) {
        d = 0
    }
    var a = String.fromCharCode(d);
    if (d == 8 || d == 32) {
        carry = " ";
        old_len = 1;
        return
    }
    lastcarry = carry;
    carry += "" + a;
    if (typeof isEnglishOn != "undefined") {
        if (isEnglishOn == "true") {
            if (a.length != 0 && d != 0) {
                insertAtCursor(a);
                old_len = lastInserted.length
            }
            return false
        }
    }
    bangla = parseunijoyCarry(carry);
    tempBangla = parseunijoyCarry(a);
    if (tempBangla == ".." || bangla == "..") {
        return false
    }
    if (a == "g") {
        if (carry == "gg") {
            insertConjunction("\u09CD\u200c", old_len);
            old_len = 1;
            return false
        }
        insertAtCursor("\u09CD");
        old_len = 1;
        carry = "g";
        return false
    } else {
        if (old_len == 0) {
            insertConjunction(bangla, 1);
            old_len = 1;
            return false
        } else {
            if (a == "A") {
                newChar = unijoy.v + "\u09CD" + lastInserted;
                insertConjunction(newChar, lastInserted.length);
                old_len = lastInserted.length;
                return false
            } else {
                if ((bangla == "" && tempBangla != "")) {
                    bangla = tempBangla;
                    if (bangla == "") {
                        carry = "";
                        return
                    } else {
                        carry = a;
                        insertAtCursor(bangla);
                        old_len = bangla.length;
                        return false
                    }
                } else {
                    if (bangla != "") {
                        insertConjunction(bangla, old_len);
                        old_len = bangla.length;
                        return false
                    }
                }
            }
        }
    }
}

function parseunijoyCarry(a) {
    if (!unijoy[a]) {
        return ""
    } else {
        return (unijoy[a])
    }
}

function insertAtCursor(d) {
    if (d.length == 1 && (d.charCodeAt(0) == "0" || d.charCodeAt(0) == "27")) {
        return
    }
    lastInserted = d;
    var e = document.getElementById(activeta);
    if (document.selection) {
        e.focus();
        sel = document.selection.createRange();
        sel.text = d;
        sel.collapse(true);
        sel.select()
    } else {
        if (e.selectionStart || e.selectionStart == 0) {
            var b = e.selectionStart;
            var a = e.selectionEnd;
            var f = e.scrollTop;
            b = (b == -1 ? e.value.length : b);
            e.value = e.value.substring(0, b) + d + e.value.substring(a, e.value.length);
            e.focus();
            e.selectionStart = b + d.length;
            e.selectionEnd = b + d.length;
            e.scrollTop = f
        } else {
            var f = e.scrollTop;
            e.value += d;
            e.focus();
            e.scrollTop = f
        }
    }
}

function insertConjunction(e, a) {
    lastInserted = e;
    var f = document.getElementById(activeta);
    if (document.selection) {
        f.focus();
        sel = document.selection.createRange();
        if (f.value.length >= a) {
            sel.moveStart("character", -1 * (a))
        }
        sel.text = e;
        sel.collapse(true);
        sel.select()
    } else {
        if (f.selectionStart || f.selectionStart == 0) {
            f.focus();
            var d = f.selectionStart - a;
            var b = f.selectionEnd;
            var g = f.scrollTop;
            d = (d == -1 ? f.value.length : d);
            f.value = f.value.substring(0, d) + e + f.value.substring(b, f.value.length);
            f.focus();
            f.selectionStart = d + e.length;
            f.selectionEnd = d + e.length;
            f.scrollTop = g
        } else {
            var g = f.scrollTop;
            f.value += e;
            f.focus();
            f.scrollTop = g
        }
    }
}

function makeUnijoyEditor(a) {
    activeTextAreaInstance = document.getElementById(a);
    activeTextAreaInstance.onkeypress = parseunijoy;
    activeTextAreaInstance.onkeydown = checkKeyDown;
    activeTextAreaInstance.onkeyup = checkKeyUp;
    activeTextAreaInstance.onfocus = function() {
        activeta = a
    }
}

function makeEnglishEditor(a) {
    activeTextAreaInstance = document.getElementById(a);
    activeTextAreaInstance.onkeypress = preEnglistCheck;
    activeTextAreaInstance.onkeydown = preEnglistCheck;
    activeTextAreaInstance.onkeyup = preEnglistCheck;
    activeTextAreaInstance.onfocus = function() {
        activeta = a
    }
}

function preEnglistCheck(a) {
    return
}

function Insert(e, f) {
    if (document.selection) {
        e.focus();
        sel = document.selection.createRange();
        sel.text = f;
        sel.collapse(true);
        sel.select()
    } else {
        if (e.selectionStart || e.selectionStart == "0") {
            var b = e.selectionStart;
            var a = e.selectionEnd;
            var d = e.scrollTop;
            b = (b == -1 ? e.value.length : b);
            e.value = e.value.substring(0, b) + f + e.value.substring(a, e.value.length);
            e.focus();
            e.selectionStart = b + f.length;
            e.selectionEnd = b + f.length;
            e.scrollTop = d
        } else {
            var d = e.scrollTop;
            e.value += value;
            e.focus();
            e.scrollTop = d
        }
    }
}

function RemoveNInsert(g, e, a) {
    if (document.selection) {
        g.focus();
        sel = document.selection.createRange();
        if (g.value.length >= a) {
            sel.moveStart("character", -1 * (a))
        }
        sel.text = e;
        sel.collapse(true);
        sel.select()
    } else {
        if (g.selectionStart || g.selectionStart == 0) {
            g.focus();
            var d = g.selectionStart - a;
            var b = g.selectionEnd;
            var f = g.scrollTop;
            d = (d == -1 ? g.value.length : d);
            g.value = g.value.substring(0, d) + e + g.value.substring(b, g.value.length);
            g.focus();
            g.selectionStart = d + e.length;
            g.selectionEnd = d + e.length;
            g.scrollTop = f
        } else {
            var f = g.scrollTop;
            g.value += e;
            g.focus();
            g.scrollTop = f
        }
    }
}

function capsDetect(b) {
    if (!b) {
        b = window.event
    }
    if (!b) {
        return false
    }
    var d = b.which ? b.which : (b.keyCode ? b.keyCode : (b.charCode ? b.charCode : 0));
    var a = b.shiftKey || (b.modifiers && (b.modifiers & 4));
    return ((d > 64 && d < 91 && !a) || (d > 96 && d < 123 && a))
}

function HideDIV(a) {
    if (document.getElementById) {
        document.getElementById(a).style.display = "none"
    } else {
        if (document.layers) {
            document.id.display = "none"
        } else {
            document.all.id.style.display = "none"
        }
    }
}

function ShowDIV(a) {
    if (document.getElementById) {
        document.getElementById(a).style.display = "block"
    } else {
        if (document.layers) {
            document.id.display = "block"
        } else {
            document.all.id.style.display = "block"
        }
    }
}

function IsBanglaDigit(a) {
    if (a == "à§¦" || a == "à§§" || a == "à§¨" || a == "à§©" || a == "à§ª" || a == "à§«" || a == "à§¬" || a == "à§­" || a == "à§®" || a == "à§¯") {
        return true
    }
    return false
}

function IsBanglaPreKar(a) {
    if (a == "à¦¿" || a == "à§ˆ" || a == "à§‡") {
        return true
    }
    return false
}

function IsBanglaPostKar(a) {
    if (a == "à¦¾" || a == "à§‹" || a == "à§Œ" || a == "à§—" || a == "à§" || a == "à§‚" || a == "à§€" || a == "à§ƒ") {
        return true
    }
    return false
}

function IsBanglaKar(a) {
    if (IsBanglaPreKar(a) || IsBanglaPostKar(a)) {
        return true
    }
    return false
}

function IsBanglaBanjonborno(a) {
    if (a == "à¦•" || a == "à¦–" || a == "à¦—" || a == "à¦˜" || a == "à¦™" || a == "à¦š" || a == "à¦›" || a == "à¦œ" || a == "à¦" || a == "à¦ž" || a == "à¦Ÿ" || a == "à¦ " || a == "à¦¡" || a == "à¦¢" || a == "à¦£" || a == "à¦¤" || a == "à¦¥" || a == "à¦¦" || a == "à¦§" || a == "à¦¨" || a == "à¦ª" || a == "à¦«" || a == "à¦¬" || a == "à¦­" || a == "à¦®" || a == "à¦¶" || a == "à¦·" || a == "à¦¸" || a == "à¦¹" || a == "à¦¯" || a == "à¦°" || a == "à¦²" || a == "à§Ÿ" || a == "à¦‚" || a == "à¦ƒ" || a == "à¦" || a == "à§Ž") {
        return true
    }
    return false
}

function IsBanglaSoroborno(a) {
    if (a == "à¦…" || a == "à¦†" || a == "à¦‡" || a == "à¦ˆ" || a == "à¦‰" || a == "à¦Š" || a == "à¦‹" || a == "à¦Œ" || a == "à¦" || a == "à¦" || a == "à¦“" || a == "à¦”") {
        return true
    }
    return false
}

function IsBanglaNukta(a) {
    if (a == "à¦‚" || a == "à¦ƒ" || a == "à¦") {
        return true
    }
    return false
}

function IsBanglaFola(a) {
    if (a == "à§à¦¯" || a == "à§à¦°") {
        return true
    }
    return false
}

function IsBanglaHalant(a) {
    if (a == "à§") {
        return true
    }
    return false
}

function IsSpace(a) {
    if (a == " " || a == "\t" || a == "\n" || a == "\r") {
        return true
    }
    return false
}

function MapKarToSorborno(a) {
    var b = a;
    if (a == "à¦¾") {
        b = "à¦†"
    } else {
        if (a == "à¦¿") {
            b = "à¦‡"
        } else {
            if (a == "à§€") {
                b = "à¦ˆ"
            } else {
                if (a == "à§") {
                    b = "à¦‰"
                } else {
                    if (a == "à§‚") {
                        b = "à¦Š"
                    } else {
                        if (a == "à§ƒ") {
                            b = "à¦‹"
                        } else {
                            if (a == "à§‡") {
                                b = "à¦"
                            } else {
                                if (a == "à§ˆ") {
                                    b = "à¦"
                                } else {
                                    if (a == "à§‹") {
                                        b = "à¦“"
                                    } else {
                                        if (a == "à§‡à¦¾") {
                                            b = "à¦“"
                                        } else {
                                            if (a == "à§Œ") {
                                                b = "à¦”"
                                            } else {
                                                if (a == "à§‡à§—") {
                                                    b = "à¦”"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return b
}

function MapSorbornoToKar(a) {
    var b = a;
    if (a == "à¦†") {
        b = "à¦¾"
    } else {
        if (a == "à¦‡") {
            b = "à¦¿"
        } else {
            if (a == "à¦ˆ") {
                b = "à§€"
            } else {
                if (a == "à¦‰") {
                    b = "à§"
                } else {
                    if (a == "à¦Š") {
                        b = "à§‚"
                    } else {
                        if (a == "à¦‹") {
                            b = "à§ƒ"
                        } else {
                            if (a == "à¦") {
                                b = "à§‡"
                            } else {
                                if (a == "à¦") {
                                    b = "à§ˆ"
                                } else {
                                    if (a == "à¦“") {
                                        b = "à§‹"
                                    } else {
                                        if (a == "à¦”") {
                                            b = "à§Œ"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return b
}
var activeta;
var IE = document.all ? 1 : 0;
var LCUNI = 0;
var LC = 0;
var LC_KAR = 0;
var LC_STRING = "";
var EnglishKeyboard = false;
var KeyBoardLayout = 1;
var ctl_v_conversion = false;
var Avro_Cha_Flag = false;
var Avro_A_Press_Flag = false;
var bijoy_keyboard_map = {
    "0": "à§¦",
    "1": "à§§",
    "2": "à§¨",
    "3": "à§©",
    "4": "à§ª",
    "5": "à§«",
    "6": "à§¬",
    "7": "à§­",
    "8": "à§®",
    "9": "à§¯",
    a: "à§ƒ",
    A: "à¦°à§",
    d: "à¦¿",
    D: "à§€",
    s: "à§",
    S: "à§‚",
    f: "à¦¾",
    F: "à¦…",
    g: "à§",
    G: "à¥¤",
    h: "à¦¬",
    H: "à¦­",
    j: "à¦•",
    J: "à¦–",
    k: "à¦¤",
    K: "à¦¥",
    l: "à¦¦",
    L: "à¦§",
    z: "à§à¦°",
    Z: "à§à¦¯",
    x: "à¦“",
    X: "à§—",
    c: "à§‡",
    C: "à§ˆ",
    v: "à¦°",
    V: "à¦²",
    b: "à¦¨",
    B: "à¦£",
    n: "à¦¸",
    N: "à¦·",
    m: "à¦®",
    M: "à¦¶",
    q: "à¦™",
    Q: "à¦‚",
    w: "à¦¯",
    W: "à§Ÿ",
    e: "à¦¡",
    E: "à¦¢",
    r: "à¦ª",
    R: "à¦«",
    t: "à¦Ÿ",
    T: "à¦ ",
    y: "à¦š",
    Y: "à¦›",
    u: "à¦œ",
    U: "à¦",
    i: "à¦¹",
    I: "à¦ž",
    o: "à¦—",
    O: "à¦˜",
    p: "à§œ",
    P: "à§",
    "&": "à¦",
    "$": "à§³",
    "`": "",
    "~": "",
    "\\": "à§Ž",
    "|": "à¦ƒ"
};
var somewherein_phonetic_keyboard_map = {
    "0": "à§¦",
    "1": "à§§",
    "2": "à§¨",
    "3": "à§©",
    "4": "à§ª",
    "5": "à§«",
    "6": "à§¬",
    "7": "à§­",
    "8": "à§®",
    "9": "à§¯",
    a: "à¦¾",
    A: "à¦†",
    d: "à¦¡",
    D: "à¦¦",
    s: "à¦¸",
    S: "à¦·",
    f: "à¦«",
    F: "à¦‹",
    g: "à¦—",
    G: "à¦˜",
    h: "à¦¹",
    H: "à¦ƒ",
    j: "à¦œ",
    J: "à¦",
    k: "à¦•",
    K: "à¦–",
    l: "à¦²",
    L: "à¦–",
    z: "à¦¯",
    Z: "à¦¤",
    x: "à¦•à§à¦¸",
    X: "à¦¢",
    c: "à¦š",
    C: "à¦›",
    v: "à¦­",
    V: "à¦ ",
    b: "à¦¬",
    B: "à¦‡",
    n: "à¦¨",
    N: "à¦£",
    m: "à¦®",
    M: "à¦—",
    q: "à§Ÿ",
    Q: "à¦›",
    w: "à§ƒ",
    W: "à¦‹",
    e: "à§‡",
    E: "à¦",
    r: "à¦°",
    R: "à§œ",
    t: "à¦Ÿ",
    T: "à¦¤",
    y: "à§Ÿ",
    Y: "à§à¦¯",
    u: "à§",
    U: "à¦‰",
    i: "à¦¿",
    I: "à¦‡",
    o: "à§‹",
    O: "à¦“",
    p: "à¦ª",
    P: "à¦š",
    "&": "à§",
    "$": "à§³",
    "+": "à§",
    ".": "à¥¤",
    "`": "",
    "~": "",
    "\\": "à¥¥",
    "|": "à¥¤"
};
var avro_phonetic_keyboard_map = {
    "0": "à§¦",
    "1": "à§§",
    "2": "à§¨",
    "3": "à§©",
    "4": "à§ª",
    "5": "à§«",
    "6": "à§¬",
    "7": "à§­",
    "8": "à§®",
    "9": "à§¯",
    o: "à¦…",
    a: "à¦†",
    A: "à¦†",
    i: "à¦‡",
    I: "à¦ˆ",
    u: "à¦‰",
    U: "à¦Š",
    e: "à¦",
    E: "à¦",
    O: "à¦“",
    d: "à¦¦",
    D: "à¦¡",
    s: "à¦¸",
    S: "à¦¶",
    f: "à¦«",
    g: "à¦—",
    h: "à¦¹",
    H: "à¦¹",
    j: "à¦œ",
    J: "à¦¯",
    k: "à¦•",
    K: "à¦•",
    l: "à¦²",
    L: "à¦²",
    z: "à¦¯",
    Z: "à§à¦¯",
    c: "à¦š",
    v: "à¦­",
    V: "à¦­",
    b: "à¦¬",
    n: "à¦¨",
    N: "à¦£",
    m: "à¦®",
    y: "à§Ÿ",
    w: "à§à¦¬",
    r: "à¦°",
    R: "à§œ",
    t: "à¦¤",
    T: "à¦Ÿ",
    y: "à§Ÿ",
    p: "à¦ª",
    "$": "à§³",
    "+": "à§",
    ".": "à¥¤",
    ":": "à¦ƒ",
    "^": "à¦",
    "`": "à§"
};
var unijoy_keyboard_map = {
    "0": "à§¦",
    "1": "à§§",
    "2": "à§¨",
    "3": "à§©",
    "4": "à§ª",
    "5": "à§«",
    "6": "à§¬",
    "7": "à§­",
    "8": "à§®",
    "9": "à§¯",
    a: "à§ƒ",
    A: "à¦°à§",
    d: "à¦¿",
    D: "à§€",
    s: "à§",
    S: "à§‚",
    f: "à¦¾",
    F: "à¦…",
    g: "à§",
    G: "à¥¤",
    h: "à¦¬",
    H: "à¦­",
    j: "à¦•",
    J: "à¦–",
    k: "à¦¤",
    K: "à¦¥",
    l: "à¦¦",
    L: "à¦§",
    z: "à§à¦°",
    Z: "à§à¦¯",
    x: "à§‹",
    X: "à§Œ",
    c: "à§‡",
    C: "à§ˆ",
    v: "à¦°",
    V: "à¦²",
    b: "à¦¨",
    B: "à¦£",
    n: "à¦¸",
    N: "à¦·",
    m: "à¦®",
    M: "à¦¶",
    q: "à¦™",
    Q: "à¦‚",
    w: "à¦¯",
    W: "à§Ÿ",
    e: "à¦¡",
    E: "à¦¢",
    r: "à¦ª",
    R: "à¦«",
    t: "à¦Ÿ",
    T: "à¦ ",
    y: "à¦š",
    Y: "à¦›",
    u: "à¦œ",
    U: "à¦",
    i: "à¦¹",
    I: "à¦ž",
    o: "à¦—",
    O: "à¦˜",
    p: "à§œ",
    P: "à§",
    "&": "à¦",
    "$": "à§³",
    "`": "",
    "~": "",
    "^": "Ã·",
    "*": "Ã—",
    "\\": "à§Ž",
    "|": "à¦ƒ"
};

function MapUnicodeCharacter(a) {
    if (KeyBoardLayout == 1) {
        return bijoy_keyboard_map[a]
    } else {
        if (KeyBoardLayout == 2) {
            return somewherein_phonetic_keyboard_map[a]
        } else {
            if (KeyBoardLayout == 3) {
                return avro_phonetic_keyboard_map[a]
            } else {
                if (KeyBoardLayout == 4) {
                    return unijoy_keyboard_map[a]
                }
            }
        }
    }
    return a
}

function ResetKarModifier() {
    LC_KAR = 0;
    LC_STRING = ""
}

function KarModification(d, b) {
    if (LC_KAR == LCUNI || IsBanglaHalant(LCUNI) || b == "à§à¦°" || b == "à§à¦¯") {
        var a = LC_STRING.length;
        LC_STRING = LC_STRING + b;
        RemoveNInsert(d, LC_STRING + LC_KAR, a + LC_KAR.length)
    } else {
        if (b == "à¦°à§") {
            var a = LC_STRING.length;
            LC_STRING = b + LC_STRING;
            RemoveNInsert(d, LC_STRING + LC_KAR, a + LC_KAR.length)
        } else {
            if (IsBanglaHalant(b)) {
                LC_STRING = LC_STRING + b;
                Insert(d, b)
            } else {
                Insert(d, b);
                ResetKarModifier()
            }
        }
    }
}

function RefModification(j) {
    var g = 1;
    var f = "";
    var i = "";
    var d = true;
    var e = "";
    j.focus();
    while (true) {
        if (document.selection) {
            sel = document.selection.createRange();
            if (j.value.length >= g) {
                sel.moveStart("character", -1 * g)
            } else {
                e = "", g--;
                sel.moveStart("character", -1 * g);
                break
            }
            e = sel.text.charAt(0)
        } else {
            if (j.selectionStart || j.selectionStart == 0) {
                var h = j.selectionStart - g;
                var a = j.selectionEnd;
                var b = j.scrollTop;
                if (h < 0) {
                    e = "", g--;
                    h = j.selectionStart - g;
                    break
                }
                e = j.value.substring(h, h + 1)
            }
        }
        if (g != 1 && IsBanglaKar(e)) {
            break
        }
        if (g == 1 && IsBanglaKar(e)) {
            f = e
        } else {
            if (IsBanglaSoroborno(e) || IsBanglaDigit(e) || IsSpace(e)) {
                break
            } else {
                if (IsBanglaBanjonborno(e)) {
                    if (d == true) {
                        i = e + i;
                        d = false
                    } else {
                        break
                    }
                } else {
                    if (IsBanglaHalant(e)) {
                        i = e + i;
                        d = true
                    }
                }
            }
        }
        g++
    }
    var k = e + "à¦°à§" + i + f;
    if (document.selection) {
        sel.text = k;
        sel.collapse(true);
        sel.select()
    } else {
        if (j.selectionStart || j.selectionStart == 0) {
            j.value = j.value.substring(0, h) + k + j.value.substring(a, j.value.length);
            j.focus();
            j.selectionStart = h + k.length;
            j.selectionEnd = h + k.length;
            j.scrollTop = b
        }
    }
}

function OAndOuKarModification(h, b, a) {
    if (document.selection) {
        h.focus();
        sel = document.selection.createRange();
        if (h.value.length >= 1) {
            sel.moveStart("character", -1)
        }
        if (sel.text.charAt(0) == "à§‡") {
            sel.text = b
        } else {
            sel.text = sel.text.charAt(0) + a
        }
        sel.collapse(true);
        sel.select()
    } else {
        if (h.selectionStart || h.selectionStart == 0) {
            var e = h.selectionStart - 1;
            var d = h.selectionEnd;
            var g = h.scrollTop;
            var f;
            e = (e == -1 ? h.value.length : e);
            if (h.value.substring(e, e + 1) == "à§‡") {
                f = b
            } else {
                e = e + 1;
                f = a
            }
            h.value = h.value.substring(0, e) + f + h.value.substring(d, h.value.length);
            h.focus();
            h.selectionStart = e + f.length;
            h.selectionEnd = e + f.length;
            h.scrollTop = g
        }
    }
}

function IsSomewhereinPhoneticModifierCharaceter(a) {
    if (a == "à¦¹" || a == "à¦—" || a == "à¦˜" || a == "à¦£" || a == "à¦ƒ" || a == "à¦Ÿ" || a == "à§‹" || a == "à¦‡" || a == "à¦¿" || a == "à¦‰" || a == "à§" || a == "à¦°" || a == "à§œ") {
        return true
    }
    return false
}

function GetSomewhereinPhoneticModifiedCharaceter(a) {
    var b = a;
    if (LCUNI == "à¦•" && a == "à¦¹") {
        b = "à¦–"
    } else {
        if (LCUNI == "à¦—" && a == "à¦¹") {
            b = "à¦˜"
        } else {
            if (LCUNI == "à¦š" && a == "à¦¹") {
                b = "à¦š"
            } else {
                if (LCUNI == "à¦œ" && a == "à¦¹") {
                    b = "à¦"
                } else {
                    if (LCUNI == "à¦Ÿ" && a == "à¦¹") {
                        b = "à¦ "
                    } else {
                        if (LCUNI == "à¦¡" && a == "à¦¹") {
                            b = "à¦¢"
                        } else {
                            if (LCUNI == "à¦¤" && a == "à¦¹") {
                                b = "à¦¥"
                            } else {
                                if (LCUNI == "à¦¦" && a == "à¦¹") {
                                    b = "à¦§"
                                } else {
                                    if (LCUNI == "à¦ª" && a == "à¦¹") {
                                        b = "à¦«"
                                    } else {
                                        if (LCUNI == "à¦¬" && a == "à¦¹") {
                                            b = "à¦­"
                                        } else {
                                            if (LCUNI == "à¦¸" && a == "à¦¹") {
                                                b = "à¦¶"
                                            } else {
                                                if (LCUNI == "à§œ" && a == "à¦¹") {
                                                    b = "à§"
                                                } else {
                                                    if (LCUNI == "à¦£" && a == "à¦—") {
                                                        b = "à¦™"
                                                    } else {
                                                        if (LCUNI == "à¦¨" && a == "à¦—") {
                                                            b = "à¦‚"
                                                        } else {
                                                            if (LCUNI == "à¦£" && a == "à¦˜") {
                                                                b = "à¦ž"
                                                            } else {
                                                                if (LCUNI == "à¦£" && a == "à¦£") {
                                                                    b = "à¦"
                                                                } else {
                                                                    if (LCUNI == "à¦ƒ" && a == "à¦ƒ") {
                                                                        b = "à¦ƒ"
                                                                    } else {
                                                                        if (LCUNI == "à¦Ÿ" && a == "à¦Ÿ") {
                                                                            b = "à§Ž"
                                                                        } else {
                                                                            if (LCUNI == "à¦¾" && a == "à§‹") {
                                                                                b = "à¦…"
                                                                            } else {
                                                                                if (LCUNI == "à¦¿" && a == "à¦¿") {
                                                                                    b = "à§€"
                                                                                } else {
                                                                                    if (LCUNI == "à¦‡" && a == "à¦‡") {
                                                                                        b = "à¦ˆ"
                                                                                    } else {
                                                                                        if (LCUNI == "à§" && a == "à§") {
                                                                                            b = "à§‚"
                                                                                        } else {
                                                                                            if (LCUNI == "à¦‰" && a == "à¦‰") {
                                                                                                b = "à¦Š"
                                                                                            } else {
                                                                                                if (LCUNI == "à¦“" && a == "à¦‡") {
                                                                                                    b = "à¦"
                                                                                                } else {
                                                                                                    if (LCUNI == "à§‹" && a == "à¦¿") {
                                                                                                        b = "à§ˆ"
                                                                                                    } else {
                                                                                                        if (LCUNI == "à¦“" && a == "à¦‰") {
                                                                                                            b = "à¦”"
                                                                                                        } else {
                                                                                                            if (LCUNI == "à§‹" && a == "à§") {
                                                                                                                b = "à§Œ"
                                                                                                            } else {
                                                                                                                if (LCUNI == "à§ƒ" && a == "à¦°") {
                                                                                                                    b = "à§ƒ"
                                                                                                                } else {
                                                                                                                    if (LCUNI == "à¦‹" && a == "à§œ") {
                                                                                                                        b = "à¦‹"
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return b
}

function IsAvroPhoneticModifierCharaceter(a) {
    if (a == "à¦ƒ" || a == "à§‹" || a == "à¦¿" || a == "à§" || IsBanglaSoroborno(a) || IsBanglaBanjonborno(a)) {
        return true
    }
    return false
}

function GetAvroPhoneticBanjonBanjonEquivalent(d, b) {
    var a = b;
    if ((d == "à¦•" && b == "à¦•") || (d == "à¦•" && b == "à¦–")) {
        a = "\u09CD" + b
    }
    return a
}

function GetAvroPhoneticModifiedCharaceter(a) {
    var b = a;
    if (a != "à¦¹" && Avro_Cha_Flag == true) {
        Avro_Cha_Flag = false
    }
    if (LCUNI == "à¦•" && a == "à¦¹") {
        b = "à¦–"
    } else {
        if (LCUNI == "à¦—" && a == "à¦¹") {
            b = "à¦˜"
        } else {
            if (LCUNI == "à¦š" && a == "à¦¹" && Avro_Cha_Flag == false) {
                b = "à¦š";
                Avro_Cha_Flag = true
            } else {
                if (LCUNI == "à¦š" && a == "à¦¹" && Avro_Cha_Flag == true) {
                    b = "à¦›";
                    Avro_Cha_Flag = false
                } else {
                    if (LCUNI == "à¦œ" && a == "à¦¹") {
                        b = "à¦"
                    } else {
                        if (LCUNI == "à¦Ÿ" && a == "à¦¹") {
                            b = "à¦ "
                        } else {
                            if (LCUNI == "à¦¡" && a == "à¦¹") {
                                b = "à¦¢"
                            } else {
                                if (LCUNI == "à¦¤" && a == "à¦¹") {
                                    b = "à¦¥"
                                } else {
                                    if (LCUNI == "à¦¦" && a == "à¦¹") {
                                        b = "à¦§"
                                    } else {
                                        if (LCUNI == "à¦ª" && a == "à¦¹") {
                                            b = "à¦«"
                                        } else {
                                            if (LCUNI == "à¦¬" && a == "à¦¹") {
                                                b = "à¦­"
                                            } else {
                                                if (LCUNI == "à¦¸" && a == "à¦¹") {
                                                    b = "à¦¶"
                                                } else {
                                                    if (LCUNI == "à¦¶" && a == "à¦¹") {
                                                        b = "à¦·"
                                                    } else {
                                                        if (LCUNI == "à§œ" && a == "à¦¹") {
                                                            b = "à§"
                                                        } else {
                                                            if (LCUNI == "à¦£" && a == "à¦—") {
                                                                b = "à¦™"
                                                            } else {
                                                                if (LCUNI == "à¦¨" && a == "à¦—") {
                                                                    b = "à¦‚"
                                                                } else {
                                                                    if (LCUNI == "à¦£" && a == "à¦˜") {
                                                                        b = "à¦ž"
                                                                    } else {
                                                                        if (LCUNI == "à¦ƒ" && a == "à¦ƒ") {
                                                                            b = "à¦ƒ"
                                                                        } else {
                                                                            if (LCUNI == "à¦Ÿ" && a == "à¦Ÿ") {
                                                                                b = "à§Ž"
                                                                            } else {
                                                                                if (LCUNI == "à¦¾" && a == "à§‹") {
                                                                                    b = "à¦…"
                                                                                } else {
                                                                                    if (LCUNI == "à¦¿" && a == "à¦¿") {
                                                                                        b = "à§€"
                                                                                    } else {
                                                                                        if (LCUNI == "à§" && a == "à§") {
                                                                                            b = "à§‚"
                                                                                        } else {
                                                                                            if (LCUNI == "à¦‰" && a == "à¦‰") {
                                                                                                b = "à¦Š"
                                                                                            } else {
                                                                                                if (LCUNI == "à¦“" && a == "à¦‡") {
                                                                                                    b = "à¦"
                                                                                                } else {
                                                                                                    if (LCUNI == "à§‹" && a == "à¦¿") {
                                                                                                        b = "à§ˆ"
                                                                                                    } else {
                                                                                                        if (LCUNI == "à¦“" && a == "à¦‰") {
                                                                                                            b = "à¦”"
                                                                                                        } else {
                                                                                                            if (LCUNI == "à§‹" && a == "à§") {
                                                                                                                b = "à§Œ"
                                                                                                            } else {
                                                                                                                if (LCUNI == "à§ƒ" && a == "à¦°") {
                                                                                                                    b = "à§ƒ"
                                                                                                                } else {
                                                                                                                    if (LCUNI == "à¦‹" && a == "à§œ") {
                                                                                                                        b = "à¦‹"
                                                                                                                    } else {
                                                                                                                        if ((LCUNI == "à¦°" || LCUNI == "à§œ") && IsBanglaBanjonborno(a)) {
                                                                                                                            b = a
                                                                                                                        } else {
                                                                                                                            if (a == "à¦") {
                                                                                                                                b = a
                                                                                                                            } else {
                                                                                                                                if (IsBanglaBanjonborno(LCUNI) && a == "à¦…" && Avro_A_Press_Flag == false) {
                                                                                                                                    Avro_A_Press_Flag = true;
                                                                                                                                    b = LCUNI
                                                                                                                                } else {
                                                                                                                                    if (IsBanglaBanjonborno(LCUNI) && IsBanglaSoroborno(a) && Avro_A_Press_Flag == true) {
                                                                                                                                        b = a
                                                                                                                                    } else {
                                                                                                                                        if (IsBanglaBanjonborno(LCUNI) && IsBanglaSoroborno(a)) {
                                                                                                                                            b = MapSorbornoToKar(a)
                                                                                                                                        } else {
                                                                                                                                            if (IsBanglaBanjonborno(LCUNI) && IsBanglaBanjonborno(a) && Avro_A_Press_Flag == false) {
                                                                                                                                                b = "\u09CD" + a
                                                                                                                                            } else {
                                                                                                                                                if (LCUNI == "à¦…" && a == "à¦…") {
                                                                                                                                                    b = "à¦‰"
                                                                                                                                                } else {
                                                                                                                                                    if (LCUNI == "à¦…" && a == "à¦‡") {
                                                                                                                                                        b = "à¦"
                                                                                                                                                    } else {
                                                                                                                                                        if (LCUNI == "à¦…" && a == "à¦‡") {
                                                                                                                                                            b = "à¦"
                                                                                                                                                        } else {
                                                                                                                                                            if (LCUNI == "à¦¾" && a == "à¦…") {
                                                                                                                                                                b = "à¦“"
                                                                                                                                                            } else {
                                                                                                                                                                if (LCUNI == "à¦" && a == "à¦") {
                                                                                                                                                                    b = "à¦ˆ"
                                                                                                                                                                } else {
                                                                                                                                                                    if (LCUNI == "à§‡" && a == "à¦…") {
                                                                                                                                                                        b = "à¦“"
                                                                                                                                                                    } else {
                                                                                                                                                                        if (LCUNI == "à¦“" && a == "à¦ˆ") {
                                                                                                                                                                            b = "à¦”"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (a != "à¦…" && a != "\u09CD" && Avro_A_Press_Flag == true) {
        Avro_A_Press_Flag = false
    }
    return b
}

function ProcessCharacter(d, f, a, b) {
    if (LCUNI == "" && b == "à§à¦¯") {
        RemoveNInsert(d, d.value.charAt(d.value.length - 1) + "à§à¦¯", 1);
        ResetKarModifier();
        return
    }
    if (IsBanglaPostKar(b)) {
        ResetKarModifier()
    }
    if (IsBanglaDigit(b)) {
        ResetKarModifier()
    }
    if (LCUNI == "à¦…" && b == "à¦¾") {
        RemoveNInsert(d, "à¦†", 1);
        ResetKarModifier()
    } else {
        if (IsBanglaHalant(LCUNI) && IsBanglaKar(b)) {
            RemoveNInsert(d, MapKarToSorborno(b), 1);
            ResetKarModifier()
        } else {
            if (KeyBoardLayout != 4 && IsBanglaNukta(LCUNI) && IsBanglaPostKar(b) == true) {
                RemoveNInsert(d, b + LCUNI, 1);
                ResetKarModifier()
            } else {
                if (KeyBoardLayout != 4 && IsBanglaNukta(LCUNI) && IsBanglaFola(b)) {
                    RemoveNInsert(d, b + LCUNI, 1);
                    ResetKarModifier()
                } else {
                    if (KeyBoardLayout == 1 && IsBanglaPreKar(LC_KAR)) {
                        KarModification(d, b)
                    } else {
                        if (KeyBoardLayout == 2 && IsSomewhereinPhoneticModifierCharaceter(b) && IsSpace(LCUNI) == false) {
                            var e = GetSomewhereinPhoneticModifiedCharaceter(b);
                            if (e != b) {
                                b = e;
                                RemoveNInsert(d, b, 1);
                                ResetKarModifier()
                            } else {
                                Insert(d, b)
                            }
                        } else {
                            if (KeyBoardLayout == 3 && IsAvroPhoneticModifierCharaceter(b) && IsSpace(LCUNI) == false) {
                                var e = GetAvroPhoneticModifiedCharaceter(b);
                                if (e != b) {
                                    if (IsBanglaBanjonborno(LCUNI) && b == "à¦¹") {
                                        RemoveNInsert(d, e, 1)
                                    } else {
                                        if (IsBanglaBanjonborno(LCUNI) && IsBanglaBanjonborno(b)) {
                                            Insert(d, e)
                                        } else {
                                            if (IsBanglaKar(LCUNI) && IsBanglaSoroborno(b)) {
                                                Insert(d, e)
                                            } else {
                                                if (e == MapSorbornoToKar(b)) {
                                                    Insert(d, e)
                                                } else {
                                                    RemoveNInsert(d, e, 1)
                                                }
                                            }
                                        }
                                    }
                                    b = e;
                                    ResetKarModifier()
                                } else {
                                    Insert(d, b)
                                }
                            } else {
                                if (KeyBoardLayout != 4 && b == "à¦°à§") {
                                    RefModification(d)
                                } else {
                                    if (KeyBoardLayout != 4 && b == "à¦¾") {
                                        OAndOuKarModification(d, "à§‹", "à¦¾")
                                    } else {
                                        if (KeyBoardLayout != 4 && b == "à§—") {
                                            OAndOuKarModification(d, "à§Œ", "à§—")
                                        } else {
                                            if (a > 29) {
                                                Insert(d, b)
                                            } else {
                                                if (a == 13 && IE) {
                                                    Insert(d, b)
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((IsBanglaHalant(LCUNI) == false && IsBanglaPreKar(b))) {
        LC_KAR = b
    }
    if (!(IsBanglaNukta(LCUNI) && IsBanglaFola(b))) {
        LCUNI = b
    }
}

function KeyBoardDown(b) {
    if (!b) {
        var b = window.event
    }
    var d;
    if (IE) {
        d = b.srcElement
    } else {
        d = b.target
    }
    var a = (window.event) ? event.keyCode : b.which;
    var e = String.fromCharCode(a);
    if ((a >= 8 && a <= 13) || a == 27 || a == 32 || a == 46) {
        LCUNI = 0;
        ResetKarModifier();
        Avro_Cha_Flag = false;
        Avro_A_Press_Flag = false
    }
    if (a == 144) {
        EnglishKeyboard = !EnglishKeyboard
    }
    if (b.altKey && b.ctrlKey && (e == "E" || e == "e")) {
        KeyBoardLayout = 1
    } else {
        if (b.altKey && b.ctrlKey && (e == "B" || e == "b")) {
            KeyBoardLayout = (KeyBoardLayout == 2 ? 1 : 2)
        } else {
            if (b.altKey && b.ctrlKey && (e == "P" || e == "p")) {
                KeyBoardLayout = (KeyBoardLayout == 3 ? 1 : 3)
            } else {
                if (b.altKey && b.ctrlKey && (e == "A" || e == "a")) {
                    KeyBoardLayout = (KeyBoardLayout == 4 ? 1 : 4)
                } else {
                    if (b.altKey && b.ctrlKey && (e == "U" || e == "u")) {
                        KeyBoardLayout = (KeyBoardLayout == 5 ? 1 : 5)
                    }
                }
            }
        }
    }
    if (a == 27) {
        return false
    }
    return true
}

function KeyBoardPress(e) {
    if (!e) {
        var e = window.event
    }
    var f;
    if (IE) {
        f = e.srcElement
    } else {
        f = e.target
    }
    var b = (window.event) ? event.keyCode : e.which;
    var g = String.fromCharCode(b);
    if (e.altKey && e.ctrlKey && (g == "E" || g == "e")) {
        return false
    } else {
        if (e.altKey && e.ctrlKey && (g == "B" || g == "b")) {
            return false
        } else {
            if (e.altKey && e.ctrlKey && (g == "P" || g == "p")) {
                return false
            } else {
                if (e.altKey && e.ctrlKey && (g == "A" || g == "a")) {
                    return false
                } else {
                    if (e.altKey && e.ctrlKey && (g == "U" || g == "u")) {
                        return false
                    } else {
                        if (e.ctrlKey || e.altKey) {
                            return true
                        }
                    }
                }
            }
        }
    }
    var d = "";
    d = MapUnicodeCharacter(g);
    if (d == null) {
        return true
    }
    var a = document.getElementById("statuslabel");
    ProcessCharacter(f, g, b, d);
    if (IE) {
        event.keyCode = 0
    }
    LC = g;
    if (b > 29) {
        return false
    }
    return true
}

function makeBijoyKeybdEditor(a) {
    activeTextAreaInstance = document.getElementById(a);
    activeTextAreaInstance.onkeydown = KeyBoardDown;
    activeTextAreaInstance.onkeypress = KeyBoardPress;
    activeTextAreaInstance.onfocus = function() {
        activeta = a
    }
}

function insertBold(b) {
    var a = getMySelectedText(b);
    var d = "[sb]" + a + "[/sb]";
    top.insertAtCursor(d)
}

function insertItalic(b) {
    var a = getMySelectedText(b);
    var d = "[si]" + a + "[/si]";
    insertAtCursor(d)
}

function insertUnderline(b) {
    var a = getMySelectedText(b);
    var d = "[su]" + a + "[/su]";
    insertAtCursor(d)
}

function insertLink(b) {
    var a = prompt("Please input the url");
    var d = getMySelectedText(b);
    var e = "[wjsK=" + a + "]" + d + "[/wjsK]";
    insertAtCursor(e)
}

function insertSize(b) {
    var a = prompt("Please input the font size");
    var d = getMySelectedText(b);
    var e = "[mvBR=" + a + "]" + d + "[/mvBR]";
    insertAtCursor(e)
}

function insertColor(b) {
    var a = prompt("Please input the color either in Hex format (#442534) or in HTMl color (red, yellow)");
    var d = getMySelectedText(b);
    var e = "[is=" + a + "]" + d + "[/is]";
    insertAtCursor(e)
}

function insertEnglish(a) {
    activeta = a;
    eng = document.getElementById("english").value;
    insertAtCursor("[Bswjk]" + eng + "[/Bswjk]")
}

function changePostStatus(a) {
    var b = document.getElementById("status");
    b.value = a
}

function getMySelectedText_old(b) {
    var e = $("#" + b);
    if (document.selection) {
        e.focus();
        sel = document.selection.createRange();
        return sel.text
    } else {
        if (typeof e.selectionStart != "undefined") {
            var d, f, a;
            a = e.value.substring(e.selectionStart, e.selectionEnd);
            return a
        }
    }
    return ""
}

function getMySelectedText(e) {
    var g = document.getElementById(e);
    var f;
    if (document.selection != undefined) {
        g.focus();
        var d = document.selection.createRange();
        f = d.text
    } else {
        if (g.selectionStart != undefined) {
            var b = g.selectionStart;
            var a = g.selectionEnd;
            f = g.value.substring(b, a)
        }
    }
    return f
}

function preview_post() {
    if ($F("content") == "") {
        alert("No text found to show the preview");
        return
    }
    var a = window.open("html/privew.html", "_blank", "width=600,height=400,toolbar=yes,location=yes,directories=yes,status=yes,menubar=yes,scrollbars=yes,copyhistory=yes,resizable=yes");
    a.document.write("<b><font size='8'>" + $F("title") + "</font></b><br><hr><br>" + $F("content"));
    a.document.close()
}

function convertToUnicode() {
    $("title");
    OldTitle = $("title");
    OldContent = $F("content");
    $("title").value = ConvertToUnicode("bijoy", $F("title"));
    $("content").value = ConvertToUnicode("bijoy", $F("content"))
}

function undoConvert() {
    if (OldTitle != "") {
        $("title").value = OldTitle
    }
    if (OldContent != "") {
        $("content").value = OldContent
    }
}

function changeKeyBoardNewWritepanel(b) {
    var a = b;
    document.getElementById("virtualkeyboard").style.display = "none";
    if (a == "vkb") {
        document.getElementById("virtualkeyboard").style.display = "block";
        isEnglishOn = "false";
        setCookie("phonetic", "true", 3);
        setCookie("bijoykb", "false", 3);
        setCookie("english", "false", 3)
    } else {
        if (a == "unijoy") {
            isEnglishOn = "false";
            setCookie("phonetic", "false", 3);
            setCookie("bijoykb", "false", 3);
            setCookie("english", "false", 3)
        } else {
            if (a == "phonetic") {
                isEnglishOn = "false";
                setCookie("phonetic", "true", 3);
                setCookie("bijoykb", "false", 3);
                setCookie("english", "false", 3)
            } else {
                if (a == "bijoy") {
                    isEnglishOn = "false";
                    setCookie("phonetic", "false", 3);
                    setCookie("bijoykb", "true", 3);
                    setCookie("english", "false", 3)
                } else {
                    if (a == "english") {
                        isEnglishOn = "true";
                        setCookie("phonetic", "false", 3);
                        setCookie("bijoykb", "false", 3);
                        setCookie("english", "true", 3)
                    }
                }
            }
        }
    }
};
